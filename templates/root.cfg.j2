# {{cn}}

[ default ]
ca                      = {{name}}      # CA name
dir                     = .           # Top dir
base_url                = {{baseurl}}           # CA base URL
aia_url                 = {{baseurl}}/{{name}}.pem     # CA certificate URL
crl_url                 = {{baseurl}}/{{name}}.crl     # CRL distribution point
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters
openssl_conf            = openssl_init          # Library config section

# CA certificate request

[ req ]
default_bits            = {{crypto.bits}}              # RSA key size
{% if ca_type == "autosign" %}
encrypt_key             = no                   # Protect private key
{% else %}
encrypt_key             = yes                   # Protect private key
{% endif %}
default_md              = {{crypto.hash}}              # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = ca_dn                 # DN section
req_extensions          = ca_reqext             # Desired extensions

[ ca_dn ]
countryName             = "{{country}}"
stateOrProvinceName     = "{{province}}"
localityName            = "{{city}}"
organizationName        = "{{organization}}"
organizationalUnitName  = "{{unit}}"
commonName              = "{{cn}}"

[ ca_reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

# CA operational settings

[ ca ]
default_ca              = {{name}}         # The default CA section

[ {{name}} ]
certificate             = $dir/certs/$ca.pem       # The CA cert
private_key             = $dir/private/$ca.key # CA private key
new_certs_dir           = $dir/certs           # Certificate archive
serial                  = $dir/db/$ca-crt.idx # Serial number file
crlnumber               = $dir/db/$ca-crl.idx # CRL number file
database                = $dir/db/$ca.db # Index file
unique_subject          = no                    # Require unique subject
default_days            = 3652                  # How long to certify for
default_md              = {{crypto.hash}}              # MD to use
policy                  = match_pol             # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = $name_opt             # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = none                  # Copy extensions from CSR
{% if ca_type == "root" %}
x509_extensions         = intermediate_ca_ext   # Default cert extensions
default_crl_days        = 30                    # How long before next CRL
{% else %}
x509_extensions         = signing_ca_ext        # Default cert extensions
default_crl_days        = 1                     # How long before next CRL
{% endif %}
crl_extensions          = crl_ext               # CRL extensions

[ match_pol ]
countryName             = match
stateOrProvinceName     = optional
localityName            = optional
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Extensions
{% if ca_type == "root" %}
[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
{% endif %}

[ intermediate_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
certificatePolicies     = MediumAssurance,MediumDevice

{% if ca_type == "intermediate" %}
[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info
certificatePolicies     = MediumAssurance,MediumDevice
{% endif %}

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info

[ issuer_info ]
caIssuers;URI.0         = {{baseurl}}/{{name}}.pem

[ crl_info ]
URI.0                   = {{baseurl}}/{{name}}.crl

# Policy OIDs

[ openssl_init ]
oid_section             = additional_oids

[ additional_oids ]
MediumAssurance     = AS65342 Medium Assurance, 1.3.6.1.4.1.0.1.7.8
MediumDevice        = AS65342 Medium Device Assurance, 1.3.6.1.4.1.0.1.7.9
